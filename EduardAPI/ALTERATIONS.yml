Iniciei estudos de programação bukkit em 2014 mês 10
VERSÔES:
- Não tem todas as versões que fiz

0.1:
Data: "2015-07-16"

Descrição:
- EduardAPI ainda era só uma Ideia tinha criado apenas uma classe chamado de Eduard com varias classes internas
- dentro destas classes tinha varias ideias como controle proprio de Tempo tipo um BukkitRunnable proprio,
- facilidade em criação de Scoreboard, criação de configuração com nome diferenciado alem do config.yml,
- criação de craft simples e composto, criação de efeito de Fogos de artifico, criação de minigame e arenas
- o objetivo de ser tudo junto era poder ficar facilmente arrastando deprojeto em projeto de plugin
classes: (Classes Internas) - Detalhes $Classe
- GUI (Event $Listener)
- Scoreboards - Scoreboard simples de fazer
- FireworkType - Desnecessário
- CraftExtra - CraftComposto $ShapedRecipe
- CraftNormal - Craft simples $ShapelessRecipe
- Fireworks - Tipo um Builder de FireworkEffect
- Timers - Fazer timer de minigame
- Time - Fazer uma Repetição de ação $BukkitRunnable
- Delay - Fazer um Atraso de ação $BukkitRunnable
- Delays - Armazenar delays de players
- Cooldowns - Criar Cooldown com Ação executada ao terminar o cooldown
- Cooldown - Criar Cooldown com apenas Timestamp
- Minigame (Arena) - Minigame salvando e puxando dados diretamente de Config
- Configs - Criar configs customizadas $YamlConfiguration com $File

interfaces:
- ITimer - 3 Funções de ações com inicio, meio e fim
- IPlayer - Função para Placeholder de Scoreboard
- Eduard - Varios métodos default do Java8 e com Método estatico getInstance() que gerava uma instancia nova da Interface
veredito da versão:
- Nesta ponto a api estava muito longe de ser uma api usavel tudo muito acomplato dificil de entender e atalizar

Versão seguinte:
0.2:
Data: "2015-07-18" - Dois dias depois

- Nesta versão já existia um JAR criado dele porem com muita repetição de classes e métodos
- e o pior tinha varias packages
, net/eduard/api/java7, net/eduard/api/java8_class, net/eduard/api/java8_interface, net/eduard/java7, net/eduard/java8, net/eduard/java8_interface
- Isso gerava muita confusão na hora de usar, o mótivo de ter feito isso que estava em transição do Java 7 para o 8 e queria
- continuar com as classes da maneira antiga, erro fatal porem né não sabia
- Eu nem sei como fazia para o Eclipse entender que estava trabalhando com Java 8 e 7 ao mesmo tempo
Mudanças:
- Classe ActionGUI, para definir como o GUI seria aberto
- Novos métodos na Interface Eduard
- IconEffect -> Efeito ao clique

veredito da versão:
- Ainda não usavel e o pior varias classes repetidas

Versão seguinte:
0.3:
Data: "2015-08-28" Quase um mês depois

- Nesta versão tudo ficou organizado em packges, varias, já estava começando a melhorar, porem criei um padrão de nomeclatura
- que terminava tudo com Setup até mesmo coisas que não fazia sentido hoje
- Vou marcar classes novas e como era na versão antiga, Package base do Jar /net/eduard/ , e Main class chamava Manager
- ficava nesta package
- Varias classes de reflection do NMS criado

classes refratoradas: (classe Antiga -> package/classe Nova)
Configs -> /config/ConfigSetup
Cooldowns -> /cooldown/CooldownSetup1
Cooldown -> /cooldown/CooldownSetup2
CraftExtra -> /craft/CraftSetup1
CraftNormal -> /craft/CraftSetup2
FireworkType -> /firework/FireworkType
Fireworks -> /firework/FireworkSetup
ActionGUI -> /gui/ GuiOpenType
Minigame -> /gui/MinigameSetup
Arena -> /gui/MinigameSetup
Scoreboards -> scoreboard/ScoreboardSetup - Scoreboard criada facilmente


classes novas:
explosion/ExplosionSetup - Explosão para ser configuravel
gui/GuiItemSetup - Item para gui
gui/GuiType - Enum desnecessária
item/ItemSetup - Extende ItemStack
item/ItemMangaer - Interface desnecessária
click/ClckSetup - Representa um clique executar uma ação expecifica
click/ClickItemSetup - Representa qual item que tem que clicar e extende ItemSetup
click/ClickItemManager - Representa o efeito do clique
money/MoneySetup - Controle de economia direto com ConfigSetup
packet/CraftItemStack -> CraftItemStack com Reflection
packet/CraftPlayer 
packe/EnumClientCommand
packet/GameProfile
packet/MineItemStack -> ItemStack NMS com Reflection
packet/MinePlayer -> EntityPlayer NMS com Reflection
packet/Packet
packet/NBTTagList
packet/NBTCompound
packet/PacketPlayInClientCommand
packet/PacketPlayOutNamedEntitySpawn
packet/PlayerConnection
save/SaveSetup - Salva informações do servidor
scoreboard/ScoreSlotSetup - Slot da scoreboard
sound/SoundManager - Interface desnecessária
sound/SoundSetup - Representa som
tag/TagInfoSetup - Representa uma Tag
tag/TagSetup - Sistema de Tag
api/text/TextSetup - Representa um Texto com 16 letras
api/create/CreateSetup - Api de criação de ItemStack
api/locaion/LocationSetup - Api de utilização com Location
api/random/RandomSetup - Api de geração de numeros aleatorios
api/EduardAPI - Classe tipo Main porem extende ConfigSetup e implementa um monte de coisa

veredito da versão:
- Api usavel neste momento porem a nomeclatura de tudo esta meio confusa
- E a package principal não esta do jeito mais correto
- que é net.eduard.eduardapi.

Versão seguinte:
0.4:
Data: "2015-11-23" - Tres mêses depois
Descrição:
- Resta versão houve novamente refratorações e movimento de classes de uma Package para outra, 
- e a Package principal se tornou net/eduard_api/ e a main Eduard na mesma package, nesta versão
- criei um sistema de LifeCycle manual, com métodos onEnable(), onDisable() e onLoad()
- Foram removidos suffix "Setup" de quase todas as classes


classes refratoradas:
ConfigSetup -> /config/Config
MoneySetup -> /money/Money
MinigameSetup -> /minigame/Minigame
ArenaSetup -> /minigame/Arena
TimeSetup -> /time/EventSetup
CooldownSetup1 -> /time/cooldown/Cooldown1
CooldownSetup2 -> /time/cooldown/Cooldown2
TagInfoSetup => /player/tag/Tag
TagSetup -> /player/tag/Tags
ScoreSetup -> /player/scoreboard/Scoreboard
CraftSetup2 -> game/craft/Craft
CraftSetup1 -> game/craft/Crafts


classes removidas:
ScoreSlotSetup

classes novas:
player/Fake - Controle de Fake /fake da vida







